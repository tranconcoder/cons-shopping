(()=>{"use strict";const t=(t,e=document)=>e.querySelector(t);class e{static getCartList(){return JSON.parse(localStorage.getItem(this.CART_STORAGE_KEY)||"{}")}static addToCart(t){const e=this.getCartList();e.hasOwnProperty(t)?e[t]++:e[t]=1,this.setStorage(e)}static removeFromCart(t){const e=this.getCartList();e.hasOwnProperty(t)&&e[t]>=1&&e[t]--,0===e[t]&&delete e[t],this.setStorage(e)}static getCartCount(){const t=this.getCartList();return Object.keys(t).reduce(((e,s)=>e+t[s]),0)}static setProductCount(t,e){const s=this.getCartList();e<=0?delete s[t]:s[t]=e,this.setStorage(s)}static setStorage(t){localStorage.setItem(this.CART_STORAGE_KEY,JSON.stringify(t))}}e.CART_STORAGE_KEY="cons_shopping_cart";const s=e,n=new Intl.NumberFormat("vi-VN",{style:"currency",currency:"VND"}),i=new Event("cart-change");var a=function(t,e,s,n){return new(s||(s=Promise))((function(i,a){function c(t){try{o(n.next(t))}catch(t){a(t)}}function r(t){try{o(n.throw(t))}catch(t){a(t)}}function o(t){var e;t.done?i(t.value):(e=t.value,e instanceof s?e:new s((function(t){t(e)}))).then(c,r)}o((n=n.apply(t,e||[])).next())}))};new class{constructor(){this.productIdList=[],this.productList=[],this.cartItemList=[],this.cartList={},this.cartListCtn=document.createElement("ul"),this.buyButton=document.createElement("button"),this.noteText=document.createElement("textarea"),this.addressText=document.createElement("textarea"),this.initData()}initData(){return a(this,void 0,void 0,(function*(){this.cartList=s.getCartList(),this.productIdList=Object.keys(this.cartList),yield this.updateProductList(this.productIdList),this.initElm(),this.initView(),this.initEvent()}))}initElm(){this.cartListCtn=t("#cart-list"),this.buyButton=t("#buy-button"),this.noteText=t("#note"),this.addressText=t("#address")}initView(){this.cartItemList=this.productList.map((t=>{const e=document.createElement("li");return e.classList.add("cart-item"),e.innerHTML=`\n                <input type="checkbox">\n\n                <img src="${t.thumb}" alt="" class="thumb">\n\n                <span class="name">${t.label}</span>\n\n                <span class="count">\n                    <button class="sub">-</button>\n                    <input type="number" min="1" id="" value="${this.cartList[t.productId]}">\n                    <button class="add">+</button>\n                </span>\n\n                <span class="price">${n.format(t.cost)}</span>\n\n                <span class="cost">${n.format(t.cost*this.cartList[t.productId])}</span>\n            `,e})),this.cartItemList.forEach((t=>this.cartListCtn.appendChild(t)))}initEvent(){this.cartItemList.forEach(((e,a)=>{const c=t(".sub",e),r=t(".add",e),o=t("input[type=number]",e),u=t(".cost",e),d=this.productList[a].productId,h=()=>{const t=+o.value*this.productList[a].cost,e=+o.value;s.setProductCount(d,e),u.textContent=n.format(t),document.dispatchEvent(i)};r.addEventListener("click",(()=>{o.value=+o.value+1+"",h()})),c.addEventListener("click",(()=>{"1"===o.value&&confirm("Bạn có muốn xóa sản phẩm này khỏi giỏ hàng?")&&(e.remove(),o.value="0"),o.value="1"!=o.value?+o.value-1+"":"1",h()})),o.addEventListener("change",(()=>{+o.value<1&&(o.value="1"),h()}))})),document.addEventListener("cart-change",(()=>{this.cartList=s.getCartList()})),this.buyButton.addEventListener("click",(t=>{const e=this.cartList,s=this.noteText.value,n=this.addressText.value,i=new FormData;i.append("product",JSON.stringify(e)),i.append("address",n),i.append("note",s),fetch("/api/add-order",{method:"POST",body:i}).then((t=>t.json())).then((t=>console.log(t)))}))}updateProductList(t){return a(this,void 0,void 0,(function*(){const e=[...new Set(t)],s=yield Promise.all(e.map((t=>fetch(`/api/get-product?productId=${t}`))));this.productList=yield Promise.all(s.map((t=>t.json())))}))}}})();